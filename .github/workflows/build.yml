name: CI/CD

on:
  push:
    branches:
      - master
    tags:
      - "v*.*.*"
      - "v*.*.*-rc*"
  pull_request:
    branches:
      - master

jobs:
  check-build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version:
          - 14.x
          - 16.x

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn install --immutable

      - name: Lint
        run: yarn lint

      - name: Check build
        run: yarn build:prod

  publish-docker:
    needs: check-build

    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Retrieve git branch and/or tag
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}

      - name: Retrieve docker labels
        id: docker_name
        run: |
          echo ::set-output name=DOCKER_TAGS::${{ steps.output.SOURCE_TAG == '' && 'latest' || steps.output.SOURCE_TAG }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push to GitHub Container Registry
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          platforms: |
            linux/amd64
            linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.docker_name.outputs.DOCKER_TAGS }}
